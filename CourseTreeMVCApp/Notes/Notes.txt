Thanks to Gavin Lon Youtube Channel.

Youtube Link: https://www.youtube.com/playlist?list=PL4LFuHwItvKZ6Mz5W5wzD9uo3w6tNChhX

Database Design Link:https://github.com/GavinLonDigital/MVC_TechTree_DatabaseDesign

GitHub Link: https://github.com/GavinLonDigital/TechTreeMVCWebApplication


jQuery Datepicker: https://jqueryui.com/download/


Remember to Run the SQL Scripts from above Github for Media Types.

> In Package Manger Console
To add migration, use the command "Add-Migration <MigrationName>".
To reflect these changes in the database , use the command "Update-Database".
To remove migration, use the command "Remove-Migration".
To rollback the changes in the database, use the command "Update-Database <Particular-MigrationName-ToBeRolledBack>"


>In Command Line

Install this command "dotnet tool install --global dotnet-ef"
Go the Project location using "cd <directory-path>" and here make use when using the command "dir" , the .csproj file is included in the listed files.
To add migration, use the command "dotnet ef migrations add <migration-name>"
To remove migration, use the command "dotnet ef migrations remove"
To commit the changes to the database, use the command "dotnet ef database update"
To rollback the changes made to the database, use the command "dotnet ef database update <previous-migration-name>"


We created a MVC Area and the controllers were added using Scaffolding Item.

By default when we create an MVC application we will have Models,Controllers and Views folder.
Similarly when we create an Area will have the same inside the Areas folder for each area we create.
Each Area will have it's own layout view.

=========How to create an Area?=========

1) Right Click on the project 
2) Select Add New Scaffolded Item
3) Then Select the item called "MVC Area"
4) Give Area a name for example "Admin" and then click on Add Button

Once an Area is added make sure to include this code in the Program.cs / Startup.cs(in older versions)

app.MapControllerRoute(
    name: "Admin",
    pattern: "{area:exists}/{controller=Home}/{action=Index}/{id?}");

Also in the Views folder inside the Areas folder make sure to copy the files "_ViewImports,_ViewStart" and Shared Folder from the common Views folder in MVC project.

====Automatically generate code for CRUD operations in Controllers inside Areas (scaffolding)====

1) Right Click on the Controllers inside the Area folder (ex: Admin Area)
2) Click on the new Scaffolded Item
3) Select "MVC Controller with views,using Entity Framework"
4) Click the Add button 
5) Then select the Model class , suppose if we are going to create category controller then select Category Model.
6) From the Data Context class select the ApplicationDbContext 
7) Then leave all other options as it (Generate Views/Reference script libraries,Use a layout page :- all of them as selected)
8) Finally edit the controller name if required.


Article related to Anti Forgery Token :- https://learn.microsoft.com/en-us/aspnet/web-api/overview/security/preventing-cross-site-request-forgery-csrf-attacks

Login UserName and Password:-

UserName:- admin@techtree.co.uk
Password:- Password100!

======Creating a partial view=====

Click on the "Shared" Folder and Add New Item
Then Select "Razor View - Empty"
Rename the partial view "_DemoPartial.cshtml"


=======Exceptions======

If we encounter an exception like "An unhandled exception occured while processing the request:- InvalidOperationException: The model item passed into the ViewDataDictionary is of type 'exampleModel' but this ViewDataDictionary instance requires a model item of type 'anotherExampleModel' ".

For this kind of error, make sure to add model (model="new anotherExampleModel) in the respective page like given below:-

 <partial name="_UserLoginPartial" model="new LoginModel
        {
            Email = String.Empty,
            Password = String.Empty,
            RememberMe = false
        }">

==========If Logged In user is not showing any enrolled courses==========

Make sure as an admin, all the category,categoryitem,content and media type is created for the course which the user has enrolled.Else create them first as Admin and then login as the normal user.

==============VideoLink in Content===============

For the video link, use embedded code from youtube.

Example: <iframe width="1263" height="480" src="https://www.youtube.com/embed/w1_AmHv2LmA" title="Part 22 - Display Content - Let&#39;s Build an ASP.NET Core MVC Web Application on .NET 5" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

From this copy the link inside the src, src="https://www.youtube.com/embed/w1_AmHv2LmA".

"https://www.youtube.com/embed/w1_AmHv2LmA" this will be the embedded code.

Also we need to add one more thing in this link "https://www.youtube.com/embed/w1_AmHv2LmA?autoplay=1&mute=1" (Add Autoplay ->  ?autoplay=1  and also add &mute=1)

===============Dependency Injection==============
1)Scoped
//we are using the AddScoped, so the IDataFunctions type is instantiated once into the DataFunctions object 
//so when a new request comes, the data functions object created from the relevant registered type is available throughout the lifetime of the one request.
//If a new request occurs, a new instance of the data function object is created before being appropriately injected. 
builder.Services.AddScoped<IDataFunctions,DataFunctions>();

2)Transient
//builder.Services.AddTransient<IDataFunctions,DataFunctions>();
If we are using the AddTransient method to register the IDataFunctionsType for dependency injection, a new data functions object would be instantiated on every time an object of the
IDataFunctions type is injected into the relevant classes constructor.

For Example, if the data functions object was injected into the constructor of the categories to user controller class and subsequently the constructor of the users to category controller class
during one request , a different object of type IDataFunctions would be passed to the users to category controller class when compared to the object passed into the categories to user controller class
via dependency injection , a new object is created before the object is injected every time a dependency injection operation occurs for the relevant IDataFunctions object when the AddTransient method is used to register the IDataFunctions type for dependency injection.

3)Singleton

//builder.Services.Singleton<IDataFunctions,DataFunctions>();

In this case,the DataFunctions object is created once and is not recreated with every request. 


Transient objects are always different, a new instance is provided to every controller and every service.

Scoped objects are the same within a request but different across different request.  

Singleton objects are the same for every object and every request.





